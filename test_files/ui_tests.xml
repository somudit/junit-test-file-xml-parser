<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="3" name="pytest" skips="0" tests="12" time="118.858"><testcase classname="test_smoke" name="test_login[firefox]" time="2.57370710373"><system-out>running create file
</system-out><system-err>INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on loginform with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.visibility_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on acctselect with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.visibility_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on lineitem with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.visibility_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on coreroot with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.visibility_of_element_located&apos;&gt;
</system-err></testcase><testcase classname="test_smoke" name="test_upload_file_create_ds[firefox]" time="16.344712019"><system-err>INFO:/code/utils/ui_tests/test_smoke.py:logged in
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on dslinkbtn with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.visibility_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/test_smoke.py:Switched to ds frame
ERROR:/code/utils/ui_tests/test_smoke.py:
 ds is &lt;selenium.webdriver.remote.webelement.WebElement object at 0x2f2dbd0&gt;
</system-err></testcase><testcase classname="test_smoke" name="test_create_ws[firefox]" time="13.2275500298"><system-err>INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on dslinkbtn with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.visibility_of_element_located&apos;&gt;
ERROR:/code/utils/ui_tests/test_smoke.py:ds is 14105290761
INFO:/code/utils/ui_tests/test_smoke.py:{&apos;14105290761&apos;: [&apos;WS.14105290761.1410529104&apos;]}
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on query with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.visibility_of_element_located&apos;&gt;
</system-err></testcase><testcase classname="test_smoke" name="test_add_column_and_delete_column[firefox]" time="18.5317780972"><system-err>INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rulefunctions with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.presence_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on .rulelist .btnaddrule with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on menu_section_hdr_column with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on create_task_selectable_add_column with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rule_gen_addcolumn with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.visibility_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on ws_query_loader with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.invisibility_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:ele found New Column
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rulefunctions with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.presence_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on .rulelist .btnaddrule with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on create_task_selectable_delete_column with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on .newcoloptions.active .btnnewcol with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rule_col_remove with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.visibility_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on ws_query_loader with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.invisibility_of_element_located&apos;&gt;
</system-err></testcase><testcase classname="test_smoke" name="test_filter[firefox]" time="8.7758731842"><system-err>INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rulefunctions with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.presence_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on .rulelist .btnaddrule with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on create_task_selectable_filter_condition with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rule_gen_condition with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.visibility_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on ws_query_loader with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.invisibility_of_element_located&apos;&gt;
</system-err></testcase><testcase classname="test_smoke" name="test_sort[firefox]" time="10.331897974"><system-err>INFO:/code/utils/ui_tests/mvc_tester_util.pyc:ele found Clicks
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rulefunctions with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.presence_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on .rulelist .btnaddrule with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on create_task_selectable_sort with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rule_gen_sort with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.visibility_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on ws_query_loader with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.invisibility_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rulefunctions with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.presence_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on .rulelist .btnaddrule with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on create_task_selectable_sort with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rule_gen_sort with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.visibility_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on ws_query_loader with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.invisibility_of_element_located&apos;&gt;
</system-err></testcase><testcase classname="test_smoke" name="test_top_or_bottom[firefox]" time="4.53329896927"><system-err>INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rulefunctions with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.presence_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on .rulelist .btnaddrule with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on create_task_selectable_limit_rows with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rule_gen_topbottom with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.visibility_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on ws_query_loader with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.invisibility_of_element_located&apos;&gt;
</system-err></testcase><testcase classname="test_smoke" name="test_display_hide_column[firefox]" time="10.787238121"><system-err>INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rulefunctions with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.presence_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on .rulelist .btnaddrule with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on create_task_selectable_add_column with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rule_gen_addcolumn with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.visibility_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on ws_query_loader with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.invisibility_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rulefunctions with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.presence_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on .rulelist .btnaddrule with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on create_task_selectable_filter_deselect with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rule_gen_condition with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.visibility_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:ele found DISPLAYHIDE
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on ws_query_loader with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.invisibility_of_element_located&apos;&gt;
</system-err></testcase><testcase classname="test_smoke" name="test_change_case_column[firefox]" time="16.52597785"><system-err>INFO:/code/utils/ui_tests/mvc_tester_util.pyc:ele found Keyword Group
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rulefunctions with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.presence_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on .rulelist .btnaddrule with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on menu_section_hdr_text with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on create_task_selectable_change_case with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on .newcoloptions.active .btnnewcol with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rule_col_chgcase with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.visibility_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on ws_query_loader with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.invisibility_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rulefunctions with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.presence_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on .rulelist .btnaddrule with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on create_task_selectable_change_case with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on .newcoloptions.active .btnnewcol with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rule_col_chgcase with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.visibility_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on ws_query_loader with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.invisibility_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rulefunctions with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.presence_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on .rulelist .btnaddrule with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on create_task_selectable_change_case with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on .newcoloptions.active .btnnewcol with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rule_col_chgcase with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.visibility_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on ws_query_loader with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.invisibility_of_element_located&apos;&gt;
</system-err></testcase><testcase classname="test_smoke" name="test_search_and_replace[firefox-words-*-case_insensitive]" time="5.26171803474"><failure message="test failure">browser = &lt;selenium.webdriver.firefox.webdriver.WebDriver object at 0x2f2d6d0&gt;
sessiondata = &lt;ui_tests.conftest.SessionDataObj instance at 0x2f1f830&gt;
case = &apos;case_insensitive&apos;, column_list = &apos;*&apos;, search_type = &apos;words&apos;

    @pytest.mark.searchandreplace
    @pytest.mark.parametrize((&quot;case&quot;), [(&quot;case_insensitive&quot;), (&quot;case_sensitive&quot;)])
    @pytest.mark.parametrize((&quot;column_list&quot;), [(&quot;*&quot;), ([&quot;column_2&quot;, &quot;column_3&quot;])])
    @pytest.mark.parametrize((&quot;search_type&quot;),[(&quot;words&quot;), (&quot;substring&quot;)])
    def test_search_and_replace(browser, sessiondata, case, column_list, search_type):
        &quot;&quot;&quot;
    
        :param browser:
        :param sessiondata:
        :return:
        &quot;&quot;&quot;
        if not len(sessiondata.wss):
            log.info(&apos;WS not found in Session, creating a WS&apos;)
            test_create_ws(browser, sessiondata)
        # col_header = find_by_css_selector_and_text(browser, &apos;.slick-header .slick-header-column&apos;, &apos;engine&apos;)
&gt;       do_search_and_replace(browser, column_list, case, search_type)

test_smoke.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
mvc_helper_methods.py:372: in do_search_and_replace
    search_and_replace_window = open_rule(browser, &apos;search_and_replace&apos;)
mvc_helper_methods.py:222: in open_rule
    rule_selectable = browser.find_element_by_id(&apos;create_task_selectable_{0}&apos;.format(rule_opname))
/code/venv/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py:206: in find_element_by_id
    return self.find_element(by=By.ID, value=id_)
/code/venv/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py:662: in find_element
    {&apos;using&apos;: by, &apos;value&apos;: value})[&apos;value&apos;]
/code/venv/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py:173: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x2f0ea50&gt;
response = {&apos;name&apos;: &apos;findElement&apos;, &apos;sessionId&apos;: &apos;4dce3c18-934e-4ed0-b269-d5a47e95bd09&apos;, &apos;status&apos;: 7, &apos;value&apos;: {&apos;message&apos;: &apos;Unable...om/components/driver_component.js&apos;, &apos;lineNumber&apos;: 407, &apos;methodName&apos;: &apos;fxdriver.Timer.prototype.setTimeout/&lt;.notify&apos;}]}}

    def check_response(self, response):
        &quot;&quot;&quot;
            Checks that a JSON response from the WebDriver does not have an error.
    
            :Args:
             - response - The JSON response from the WebDriver server as a dictionary
               object.
    
            :Raises: If the response contains an error message.
            &quot;&quot;&quot;
        status = response[&apos;status&apos;]
        if status == ErrorCode.SUCCESS:
            return
        exception_class = ErrorInResponseException
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = WebDriverException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = WebDriverException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        else:
            exception_class = WebDriverException
        value = response[&apos;value&apos;]
        if isinstance(value, basestring):
            if exception_class == ErrorInResponseException:
                raise exception_class(response, value)
            raise exception_class(value)
        message = &apos;&apos;
        if &apos;message&apos; in value:
            message = value[&apos;message&apos;]
    
        screen = None
        if &apos;screen&apos; in value:
            screen = value[&apos;screen&apos;]
    
        stacktrace = None
        if &apos;stackTrace&apos; in value and value[&apos;stackTrace&apos;]:
            stacktrace = []
            try:
                for frame in value[&apos;stackTrace&apos;]:
                    line = self._value_or_default(frame, &apos;lineNumber&apos;, &apos;&apos;)
                    file = self._value_or_default(frame, &apos;fileName&apos;, &apos;&lt;anonymous&gt;&apos;)
                    if line:
                        file = &quot;%s:%s&quot; % (file, line)
                    meth = self._value_or_default(frame, &apos;methodName&apos;, &apos;&lt;anonymous&gt;&apos;)
                    if &apos;className&apos; in frame:
                        meth = &quot;%s.%s&quot; % (frame[&apos;className&apos;], meth)
                    msg = &quot;    at %s (%s)&quot;
                    msg = msg % (meth, file)
                    stacktrace.append(msg)
            except TypeError:
                pass
        if exception_class == ErrorInResponseException:
            raise exception_class(response, message)
&gt;       raise exception_class(message, screen, stacktrace)
E       NoSuchElementException: Message: u&apos;Unable to locate element: {&quot;method&quot;:&quot;id&quot;,&quot;selector&quot;:&quot;create_task_selectable_search_and_replace&quot;}&apos; ; Stacktrace: 
E           at FirefoxDriver.prototype.findElementInternal_ (file:///tmp/tmpyCMz5t/extensions/fxdriver@googlecode.com/components/driver_component.js:9470)
E           at fxdriver.Timer.prototype.setTimeout/&lt;.notify (file:///tmp/tmpyCMz5t/extensions/fxdriver@googlecode.com/components/driver_component.js:407)

/code/venv/lib/python2.7/site-packages/selenium/webdriver/remote/errorhandler.py:164: NoSuchElementException</failure><system-err>INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rulefunctions with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.presence_of_element_located&apos;&gt;
INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on .rulelist .btnaddrule with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.element_to_be_clickable&apos;&gt;
</system-err></testcase><testcase classname="test_smoke" name="test_search_and_replace[firefox-words-*-case_sensitive]" time="5.03797984123"><failure message="test failure">browser = &lt;selenium.webdriver.firefox.webdriver.WebDriver object at 0x2f2d6d0&gt;
sessiondata = &lt;ui_tests.conftest.SessionDataObj instance at 0x2f1f830&gt;
case = &apos;case_sensitive&apos;, column_list = &apos;*&apos;, search_type = &apos;words&apos;

    @pytest.mark.searchandreplace
    @pytest.mark.parametrize((&quot;case&quot;), [(&quot;case_insensitive&quot;), (&quot;case_sensitive&quot;)])
    @pytest.mark.parametrize((&quot;column_list&quot;), [(&quot;*&quot;), ([&quot;column_2&quot;, &quot;column_3&quot;])])
    @pytest.mark.parametrize((&quot;search_type&quot;),[(&quot;words&quot;), (&quot;substring&quot;)])
    def test_search_and_replace(browser, sessiondata, case, column_list, search_type):
        &quot;&quot;&quot;
    
        :param browser:
        :param sessiondata:
        :return:
        &quot;&quot;&quot;
        if not len(sessiondata.wss):
            log.info(&apos;WS not found in Session, creating a WS&apos;)
            test_create_ws(browser, sessiondata)
        # col_header = find_by_css_selector_and_text(browser, &apos;.slick-header .slick-header-column&apos;, &apos;engine&apos;)
&gt;       do_search_and_replace(browser, column_list, case, search_type)

test_smoke.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
mvc_helper_methods.py:372: in do_search_and_replace
    search_and_replace_window = open_rule(browser, &apos;search_and_replace&apos;)
mvc_helper_methods.py:222: in open_rule
    rule_selectable = browser.find_element_by_id(&apos;create_task_selectable_{0}&apos;.format(rule_opname))
/code/venv/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py:206: in find_element_by_id
    return self.find_element(by=By.ID, value=id_)
/code/venv/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py:662: in find_element
    {&apos;using&apos;: by, &apos;value&apos;: value})[&apos;value&apos;]
/code/venv/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py:173: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x2f0ea50&gt;
response = {&apos;name&apos;: &apos;findElement&apos;, &apos;sessionId&apos;: &apos;4dce3c18-934e-4ed0-b269-d5a47e95bd09&apos;, &apos;status&apos;: 7, &apos;value&apos;: {&apos;message&apos;: &apos;Unable...om/components/driver_component.js&apos;, &apos;lineNumber&apos;: 407, &apos;methodName&apos;: &apos;fxdriver.Timer.prototype.setTimeout/&lt;.notify&apos;}]}}

    def check_response(self, response):
        &quot;&quot;&quot;
            Checks that a JSON response from the WebDriver does not have an error.
    
            :Args:
             - response - The JSON response from the WebDriver server as a dictionary
               object.
    
            :Raises: If the response contains an error message.
            &quot;&quot;&quot;
        status = response[&apos;status&apos;]
        if status == ErrorCode.SUCCESS:
            return
        exception_class = ErrorInResponseException
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = WebDriverException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = WebDriverException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        else:
            exception_class = WebDriverException
        value = response[&apos;value&apos;]
        if isinstance(value, basestring):
            if exception_class == ErrorInResponseException:
                raise exception_class(response, value)
            raise exception_class(value)
        message = &apos;&apos;
        if &apos;message&apos; in value:
            message = value[&apos;message&apos;]
    
        screen = None
        if &apos;screen&apos; in value:
            screen = value[&apos;screen&apos;]
    
        stacktrace = None
        if &apos;stackTrace&apos; in value and value[&apos;stackTrace&apos;]:
            stacktrace = []
            try:
                for frame in value[&apos;stackTrace&apos;]:
                    line = self._value_or_default(frame, &apos;lineNumber&apos;, &apos;&apos;)
                    file = self._value_or_default(frame, &apos;fileName&apos;, &apos;&lt;anonymous&gt;&apos;)
                    if line:
                        file = &quot;%s:%s&quot; % (file, line)
                    meth = self._value_or_default(frame, &apos;methodName&apos;, &apos;&lt;anonymous&gt;&apos;)
                    if &apos;className&apos; in frame:
                        meth = &quot;%s.%s&quot; % (frame[&apos;className&apos;], meth)
                    msg = &quot;    at %s (%s)&quot;
                    msg = msg % (meth, file)
                    stacktrace.append(msg)
            except TypeError:
                pass
        if exception_class == ErrorInResponseException:
            raise exception_class(response, message)
&gt;       raise exception_class(message, screen, stacktrace)
E       NoSuchElementException: Message: u&apos;Unable to locate element: {&quot;method&quot;:&quot;id&quot;,&quot;selector&quot;:&quot;create_task_selectable_search_and_replace&quot;}&apos; ; Stacktrace: 
E           at FirefoxDriver.prototype.findElementInternal_ (file:///tmp/tmpyCMz5t/extensions/fxdriver@googlecode.com/components/driver_component.js:9470)
E           at fxdriver.Timer.prototype.setTimeout/&lt;.notify (file:///tmp/tmpyCMz5t/extensions/fxdriver@googlecode.com/components/driver_component.js:407)

/code/venv/lib/python2.7/site-packages/selenium/webdriver/remote/errorhandler.py:164: NoSuchElementException</failure><system-err>INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rulefunctions with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.presence_of_element_located&apos;&gt;
</system-err></testcase><testcase classname="test_smoke" name="test_search_and_replace[firefox-words-column_list1-case_insensitive]" time="5.07021093369"><failure message="test failure">browser = &lt;selenium.webdriver.firefox.webdriver.WebDriver object at 0x2f2d6d0&gt;
sessiondata = &lt;ui_tests.conftest.SessionDataObj instance at 0x2f1f830&gt;
case = &apos;case_insensitive&apos;, column_list = [&apos;column_2&apos;, &apos;column_3&apos;]
search_type = &apos;words&apos;

    @pytest.mark.searchandreplace
    @pytest.mark.parametrize((&quot;case&quot;), [(&quot;case_insensitive&quot;), (&quot;case_sensitive&quot;)])
    @pytest.mark.parametrize((&quot;column_list&quot;), [(&quot;*&quot;), ([&quot;column_2&quot;, &quot;column_3&quot;])])
    @pytest.mark.parametrize((&quot;search_type&quot;),[(&quot;words&quot;), (&quot;substring&quot;)])
    def test_search_and_replace(browser, sessiondata, case, column_list, search_type):
        &quot;&quot;&quot;
    
        :param browser:
        :param sessiondata:
        :return:
        &quot;&quot;&quot;
        if not len(sessiondata.wss):
            log.info(&apos;WS not found in Session, creating a WS&apos;)
            test_create_ws(browser, sessiondata)
        # col_header = find_by_css_selector_and_text(browser, &apos;.slick-header .slick-header-column&apos;, &apos;engine&apos;)
&gt;       do_search_and_replace(browser, column_list, case, search_type)

test_smoke.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
mvc_helper_methods.py:372: in do_search_and_replace
    search_and_replace_window = open_rule(browser, &apos;search_and_replace&apos;)
mvc_helper_methods.py:222: in open_rule
    rule_selectable = browser.find_element_by_id(&apos;create_task_selectable_{0}&apos;.format(rule_opname))
/code/venv/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py:206: in find_element_by_id
    return self.find_element(by=By.ID, value=id_)
/code/venv/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py:662: in find_element
    {&apos;using&apos;: by, &apos;value&apos;: value})[&apos;value&apos;]
/code/venv/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py:173: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x2f0ea50&gt;
response = {&apos;name&apos;: &apos;findElement&apos;, &apos;sessionId&apos;: &apos;4dce3c18-934e-4ed0-b269-d5a47e95bd09&apos;, &apos;status&apos;: 7, &apos;value&apos;: {&apos;message&apos;: &apos;Unable...om/components/driver_component.js&apos;, &apos;lineNumber&apos;: 407, &apos;methodName&apos;: &apos;fxdriver.Timer.prototype.setTimeout/&lt;.notify&apos;}]}}

    def check_response(self, response):
        &quot;&quot;&quot;
            Checks that a JSON response from the WebDriver does not have an error.
    
            :Args:
             - response - The JSON response from the WebDriver server as a dictionary
               object.
    
            :Raises: If the response contains an error message.
            &quot;&quot;&quot;
        status = response[&apos;status&apos;]
        if status == ErrorCode.SUCCESS:
            return
        exception_class = ErrorInResponseException
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = WebDriverException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = WebDriverException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        else:
            exception_class = WebDriverException
        value = response[&apos;value&apos;]
        if isinstance(value, basestring):
            if exception_class == ErrorInResponseException:
                raise exception_class(response, value)
            raise exception_class(value)
        message = &apos;&apos;
        if &apos;message&apos; in value:
            message = value[&apos;message&apos;]
    
        screen = None
        if &apos;screen&apos; in value:
            screen = value[&apos;screen&apos;]
    
        stacktrace = None
        if &apos;stackTrace&apos; in value and value[&apos;stackTrace&apos;]:
            stacktrace = []
            try:
                for frame in value[&apos;stackTrace&apos;]:
                    line = self._value_or_default(frame, &apos;lineNumber&apos;, &apos;&apos;)
                    file = self._value_or_default(frame, &apos;fileName&apos;, &apos;&lt;anonymous&gt;&apos;)
                    if line:
                        file = &quot;%s:%s&quot; % (file, line)
                    meth = self._value_or_default(frame, &apos;methodName&apos;, &apos;&lt;anonymous&gt;&apos;)
                    if &apos;className&apos; in frame:
                        meth = &quot;%s.%s&quot; % (frame[&apos;className&apos;], meth)
                    msg = &quot;    at %s (%s)&quot;
                    msg = msg % (meth, file)
                    stacktrace.append(msg)
            except TypeError:
                pass
        if exception_class == ErrorInResponseException:
            raise exception_class(response, message)
&gt;       raise exception_class(message, screen, stacktrace)
E       NoSuchElementException: Message: u&apos;Unable to locate element: {&quot;method&quot;:&quot;id&quot;,&quot;selector&quot;:&quot;create_task_selectable_search_and_replace&quot;}&apos; ; Stacktrace: 
E           at FirefoxDriver.prototype.findElementInternal_ (file:///tmp/tmpyCMz5t/extensions/fxdriver@googlecode.com/components/driver_component.js:9470)
E           at fxdriver.Timer.prototype.setTimeout/&lt;.notify (file:///tmp/tmpyCMz5t/extensions/fxdriver@googlecode.com/components/driver_component.js:407)

/code/venv/lib/python2.7/site-packages/selenium/webdriver/remote/errorhandler.py:164: NoSuchElementException</failure><system-err>INFO:/code/utils/ui_tests/mvc_tester_util.pyc:trying to click on rulefunctions with condition :&lt;class &apos;selenium.webdriver.support.expected_conditions.presence_of_element_located&apos;&gt;
</system-err></testcase></testsuite>